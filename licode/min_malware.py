class Solution(object):
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
        ans = min(initial)
        visited = set()
        max_size = 0

        def dfs(i, vis):
            for j in range(len(graph[i])):
                if graph[i][j] != 1: continue
                if j in vis: continue
                if i == j: continue
                vis.add(j)
                dfs(j, vis)

        for i in range(len(graph)):
            if i in visited: continue
            vis = set([i])
            dfs(i, vis)
            sub_size = len(vis)
            mal_size = sum(1 if init in vis else 0 for init in initial)
            if mal_size == 1:
                if sub_size > max_size:
                    ans = i
                    max_size = sub_size
            visited.union(vis)
        return ans

print Solution().minMalwareSpread(
[[1,1,1],[1,1,1],[1,1,1]],
[1,2]
)